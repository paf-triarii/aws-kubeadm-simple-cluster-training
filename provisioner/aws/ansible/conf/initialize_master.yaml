- name: Initialize Kubeadm in main master
  hosts: masters[0]
  vars_files:
    - ../env_variables_aws.yaml
  tasks:
    - name: Prepare reusable fact
      ansible.builtin.set_fact:
        terraform_outputs: "{{ root.outputs.location }}/{{ root.terraform.prefix }}"
        api_server: "{{ ansible_hostname[3:] | replace('-', '.') }}"

    - name: Kubeadm init
      shell: |
        kubeadm init --cri-socket unix:///var/run/crio/crio.sock --control-plane-endpoint "{{ api_server }}:6443" \
        --pod-network-cidr={{ addOns.cni.calico.cidr }} \
        --service-cidr=10.96.0.0/12
      register: kubeadm_output
      become: true

    - name: Ensure idempotency removing file first
      shell: rm -rf /tmp/kubeadm_output
      become: true

    - name: your local file on master node
      ansible.builtin.file:
        path: /tmp/kubeadm_output
        mode: '0644'
        state: touch
      become: true

    - name: Print output to file
      ansible.builtin.copy:
        content: "{{ kubeadm_output.stdout }}"
        dest: /tmp/kubeadm_output
        mode: '0644'
      become: true

    # Ref: https://stackoverflow.com/questions/7451423/how-to-show-only-next-line-after-the-matched-one
    - name: Get full join command
      ansible.builtin.shell: |
        cat /tmp/kubeadm_output | grep '\-\-discovery-token-ca-cert-hash' -B 2 | head -3 | tail -n+2
      register: join_command
      become: true

    - name: Get List join_command
      ansible.builtin.set_fact:
        join_command: "{{ join_command.stdout | split(' ') }}"

    - name: Prepare variables
      ansible.builtin.set_fact:
        token: "{{ join_command[6] }}"
        hash: "{{ join_command[8] }}"
        # cert_key: "{{ join_command[11] }}" # Only for high-availability
      register: join_options

    - name: Get kubeconfig
      ansible.builtin.fetch:
        src: "/etc/kubernetes/admin.conf"
        dest: "{{ terraform_outputs }}/kubeconfig"
        flat: true
      become: true

- name: Configure kubernetes cluster
  hosts: localhost
  vars_files: ../env_variables_aws.yaml
  tasks:
    - name: Check if target variable is in accepted ones
      ansible.builtin.set_fact:
        ubuntu_target: "{{ target in ['ubuntu_22_04', 'ubuntu_20_04', 'ubuntu_23_10'] }}"
        kube_version: "{{ utils.kubernetes.version }}"
        kubeconfig: "--kubeconfig {{ terraform_outputs }}/kubeconfig"
    
    - name: Install docker
      ansible.builtin.include_tasks:
        file: dependencies/common.yml
      when: utils.docker.enabled

    - name: Add Kubernetes repository
      ansible.builtin.shell: |
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' \
        | tee /etc/apt/sources.list.d/kubernetes.list
      become: true
      when: ubuntu_target

    - name: Update APT and cache
      ansible.builtin.apt:
        update_cache: true
      become: true
      when: ubuntu_target

    - name: Install kubectl
      ansible.builtin.apt:
        name: "kubectl={{ kube_version }}"
        state: present
      become: true
      when: ubuntu_target and utils.kubernetes.kubectl
      register: kubectl_result
      ignore_errors: true

    - name: Install kubectl if specific version is not available
      ansible.builtin.apt:
        name: kubectl
        state: present
      become: true
      when: ubuntu_target and utils.kubernetes.kubectl and kubectl_result.failed

    - name: Install Calico
      ansible.builtin.shell: |
        kubectl {{ kubeconfig }} create -f https://raw.githubusercontent.com/projectcalico/calico/{{ addOns.cni.calico.version }}/manifests/tigera-operator.yaml --server https://{{ api_server }}:6443
        sleep 5
        curl https://raw.githubusercontent.com/projectcalico/calico/{{ addOns.cni.calico.version }}/manifests/custom-resources.yaml | \
        sed -e "s+192.168.0.0/16+{{ addOns.cni.calico.cidr }}+g" | kubectl {{ kubeconfig }} create -f - --server https://{{ api_server }}:6443
